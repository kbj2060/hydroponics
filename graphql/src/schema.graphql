type Query {
    info : String!
    feed : [User!]!
}

type Mutation {
    post(name: String!, password: String!): User!
}

scalar DateTime 

enum FigureFormat {
  LUX
  HUM
  TEMP
  CO2
  PH
  EC
}

enum SwitchFormat {
  FAN
  HUMIDIFIER
  LED
}

type Dashboard {
  id: ID! 
  controller : Controller!
  enviroment : Enviroment!
}

type Enviroment {
  id : ID! 
  figures : [Figure!]!
  updatedAt : DateTime!
  createdAt : DateTime! 
}

type Figure {
  id : ID! 
  updatedAt : DateTime!
  value : Float!
  enviroment : Enviroment! 
  measurement : FigureFormat! 
}
type Controller {
  id : ID! 
  switches : [Switch!]!
  createdAt : DateTime! 
  updatedAt : DateTime!
}

type Switch {
  id : ID! 
  controller : Controller! 
  switch : SwitchFormat!
  updatedAt : DateTime!
  status : Boolean!
  controledBy : User!
}

type User {
  id: ID! 
  name: String!
  password: String!
  createdAt : DateTime! 
}